variables:
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: isVersionTag
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]
  - name: core-dockerRepository
    value: bobby1072/fs2_docker_image

trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - "*"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Build
    jobs:
      - job: build_backend
        displayName: "Build backend"
        steps:
          - checkout: self
            submodules: true

          - task: UseDotNet@2
            displayName: "Install .NET SDK"
            inputs:
              packageType: "sdk"
              version: "8.0.x"

          - task: DotNetCoreCLI@2
            displayName: "Run .NET Unit Tests"
            inputs:
              command: "test"
              projects: "src/fsCore/fsCore.sln"
              arguments: "-c Release"

          - task: Docker@2
            displayName: build local docker image
            inputs:
              command: build
              Dockerfile: "$(Build.SourcesDirectory)/src/fsCore/dockerfile.azurebuild"
              buildContext: "$(Build.SourcesDirectory)"

      - job: build_frontend
        displayName: "Build frontend"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 20.x

          - task: Npm@1
            displayName: "NPM install"
            inputs:
              command: "custom"
              customCommand: "ci"
              workingDir: $(Build.SourcesDirectory)/src/client

          - task: Npm@1
            displayName: "Check types"
            inputs:
              commands: "custom"
              customCommand: "run check-types"
              workingDir: $(Build.SourcesDirectory)/src/client

          - task: Npm@1
            displayName: "Test"
            inputs:
              command: "custom"
              customCommand: "test --watchAll=false --coverage --ci"
              workingDir: $(Build.SourcesDirectory)/src/client

          - powershell: $(Build.SourcesDirectory)/build-scripts/add_build_env_frontend.ps1
            displayName: "Add build environment"

          - task: Npm@1
            displayName: "Build"
            inputs:
              command: "custom"
              customCommand: "run build"
              workingDir: $(Build.SourcesDirectory)/src/client

          - publish: "$(Build.SourcesDirectory)/src/client/build"
            condition: eq(variables.isMain, true)
            displayName: "Publish client files"
            artifact: client

  - stage: Publish
    condition: eq(variables.isMain, true)
    jobs:
      - job: push_core_image
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: client
              path: $(Build.SourcesDirectory)/src/client/build

          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: DockerHub
              username: $(dockerHubUsername)
              password: $(dockerHubPassword)

          - task: Docker@2
            displayName: Build Core Image
            inputs:
              command: build
              repository: $(core-dockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)
              Dockerfile: "$(Build.SourcesDirectory)/src/fsCore/dockerfile"
              buildContext: "$(Build.SourcesDirectory)"
              arguments: --build-arg WEB_APP_CLIENT_PATH=src/client/build/

          - task: Docker@2
            displayName: Push Core Image
            inputs:
              command: push
              repository: $(core-dockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)
